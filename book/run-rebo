#!/usr/bin/env python3
import sys, json, re, os, subprocess


def eprint(*args, **kwargs):
    print(*args, file=sys.stderr, **kwargs)


stdin = sys.stdin.read()
input = json.loads(stdin)
output = json.dumps(input[1])
decoded = output.encode('utf-8').decode('unicode_escape')

output = output.replace("// mdbook-run-rebo: skip\\n", "")

try:
    os.mkdir("out/")
except (IsADirectoryError, FileExistsError):
    pass

subprocess.run(["cargo", "run", "--release"], cwd="../", stdout=subprocess.DEVNULL, stderr=sys.stderr)

error = False
file_paths = []
for (i, code) in enumerate(re.findall(r'(?s)```rust\n(.*?)\n```', decoded)):
    filename = f"{i}.re"

    skip = False
    if "// mdbook-run-rebo: skip\n" in code:
        skip = True

    requested_name = re.search(r'^// filename: (.*)', code)
    if requested_name is not None:
        filename = f"{requested_name.group(1)}"
    file_paths.append(f"out/{filename}")

    with open(f"out/{filename}", "w") as f:
        f.write(code)

    if skip:
        continue

    res = subprocess.run(
        ["../../target/release/rebo", f"{filename}"],
        stdout=subprocess.DEVNULL,
        stderr=sys.stderr,
        env={'RUST_LOG': 'off'},
        cwd="out",
    )
    if res.returncode != 0:
        error = True

if error:
    exit(1)
else:
    for path in file_paths:
        os.remove(path)
    os.rmdir("out/")

print(output)
